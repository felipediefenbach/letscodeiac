---
- hosts: localhost
  gather_facts: false
  collections:
    community.general
  vars:
    # - Projeto
    dominio: 'homolog.conexaoinfraestrutura.inf.br'
    ssh_chave: "aws-ec2-administrador.pem"
    # - Git
    git_repo: 'github.com/felipediefenbach/letscodeiac.git'
    git_proto: 'https'
    git_diretorio: '/srv/letscodeiac'
    git_branch: 'feature/kubernets'
    # - Registro
    registro: '864342323788.dkr.ecr.us-east-1.amazonaws.com'
    frontendNone: 'frontend'
    frontendVersao: 'latest'
    backendNone: 'backend'
    backendVersao: 'latest'
  tasks:

    - community.general.terraform:
        project_path: "./"
        state: present
      tags: [ never, terraform, criar ]

    - ansible.builtin.file:
        dest: './aws-ec2-administrador.pem'
        owner: root
        group: 'root'
        mode: '0600'
      tags: [ never, git, criar ]

    - ansible.builtin.file:
        dest: './ansible.cfg'
        owner: root
        group: 'root'
        mode: '0600'
      tags: [ never, git, criar ]

    - ansible.builtin.wait_for_connection:
      delegate_to: acesso.{{ dominio }}

    - ansible.builtin.dnf:
        name: epel-release
      delegate_to: acesso.{{ dominio }}
      become: true
      tags: [ never, git, criar ]

    - ansible.builtin.dnf:
        name:
          - git
          - ansible
        update_cache: true
      delegate_to: acesso.{{ dominio }}
      become: true
      tags: [ never, git, criar ]

    - ansible.builtin.git:
        repo: "{{ git_proto }}://{{ git_repo }}"
        dest: "{{ git_diretorio }}"
        version: "{{ git_branch }}"
        update: true
        force: true
      delegate_to: acesso.{{ dominio }}
      become: true
      tags: [ never, git, criar ]

    - ansible.builtin.copy:
        src: './aws-ec2-administrador.pem'
        dest: "{{ git_diretorio }}/aws-ec2-administrador.pem"
        owner: 'root'
        group: 'root'
        mode: '0600'
      delegate_to: acesso.{{ dominio }}
      become: true
      tags: [ never, git, criar ]

    - ansible.builtin.shell: |
        aws --profile conexinfra ecr get-login-password --region us-east-1 > /tmp/registry-login
      tags: [ never, registro ]

    - ansible.builtin.shell: |
        cat /tmp/registry-login | docker login --username AWS --password-stdin {{ registro }}
      tags: [ never, registro ]

    - community.docker.docker_image:
        build:
          path: 'dockerfront/'
        name: "{{ registro }}/{{ frontendNone }}"
        tag: "{{ frontendVersao }}"
        push: true
        source: build
      tags: [ never, registro ]

    - community.docker.docker_image:
        build:
          path: 'dockerback/'
        name: "{{ registro }}/{{ backendNone }}"
        tag: "{{ backendVersao }}"
        push: true
        source: build
      tags: [ never, registro ]

    - ansible.builtin.copy:
        src: '/tmp/registry-login'
        dest: "/tmp/registry-login"
        owner: 'root'
        group: 'root'
        mode: '0600'
      delegate_to: acesso.{{ dominio }}
      become: true
      tags: [ never, registro ]

    - ansible.builtin.shell: |
        ansible-playbook frontend.yml
        ansible-playbook -i apibackend, backend.yml
      args:
        chdir: "{{ git_diretorio }}"
        executable: /bin/bash
      delegate_to: acesso.{{ dominio }}
      become: true
      tags: [ never, homolog, criar ]

    - community.general.terraform:
        project_path: "./"
        state: absent
      tags: [ never, destruir ]