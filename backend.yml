---
- hosts: apibackend
  gather_facts: false
  become: true
  collections:
    - community.docker
    - community.mysql
  vars:
    frontendNone: 'frontend'
    frontendVersao: 'v01'
    backendNone: 'backend'
    backendVersao: 'v01'
  tasks:

  - ansible.builtin.shell: 'setenforce 0'
  - ansible.builtin.shell: 'modprobe br_netfilter'

  - ansible.builtin.get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo

  - ansible.builtin.copy:
      dest: '/etc/yum.repos.d/kubernetes.repo'
      content: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - ansible.builtin.dnf:
      name: 
        - docker-ce
        - kubeadm
        - python3-pip
        - python3-setuptools
        - bind-utils
        - iproute-tc
        - iproute
      state: latest

  - ansible.builtin.pip:
        name:
          - docker
          - pymysql

  - ansible.builtin.service:
      name: docker
      state: started
      enabled: yes

  - ansible.builtin.service:
      name: kubelet
      state: started
      enabled: yes

  - ansible.builtin.copy:
      src: '/var/tmp/kubeadm-init'
      dest: '/var/tmp/kubeadm-join'
      owner: root
      group: root
      mode: '0600'

  - ansible.builtin.shell: |
      swapoff -a
      echo "$(dig +short apifrontend.adainterno) master-node" >> /etc/hosts
      echo  "$(hostname -I | cut -d ' ' -f 1) node-1 worker-node-1" >> /etc/hosts
      rm /etc/containerd/config.toml
      systemctl restart containerd
      bash /var/tmp/kubeadm-join
      
  - ansible.builtin.copy:
      src: 'dockerfront'
      dest: '/root/'

  - ansible.builtin.copy:
      src: 'dockerback'
      dest: '/root/'
    
  - community.docker.docker_image:
      state: absent
      name: "{{ frontendNone }}"
      tag: "{{ frontendVersao }}"

  - community.docker.docker_image:
      name: "{{ frontendNone }}:{{ frontendVersao }}"
      build:
        path: '/root/dockerfront'
      source: build
      state: present

  - community.docker.docker_image:
      state: absent
      name: "{{ backendNone }}"
      tag: "{{ backendVersao }}"

  - community.docker.docker_image:
      name: "{{ backendNone }}:{{ backendVersao }}"
      build:
        path: '/root/dockerback'
      source: build
      state: present

  # # ningu√©m viu isso :)
  # - ansible.builtin.pause:
  #     seconds: 30

  # - community.mysql.mysql_query:
  #     login_db: "{{ mysqlBackendDb }}"
  #     login_host: "{{ mysqlBackendHost }}"
  #     login_password: "{{ mysqlBackendSenha }}"
  #     login_user: "{{ mysqlBackendUsuario }}"
  #     query:
  #       - INSERT INTO usuario (password, username) VALUES ('letscodeiac', 'letscodeiac')
    