---
- hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - community.docker
  vars:
    frontendNone: 'frontend'
    frontendVersao: 'v01'
    backendNone: 'backend'
    backendVersao: 'v01'
  tasks:

  - ansible.builtin.shell: 'setenforce 0'
  - ansible.builtin.shell: 'modprobe br_netfilter'

  - ansible.builtin.get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo

  - ansible.builtin.copy:
      dest: '/etc/yum.repos.d/kubernetes.repo'
      content: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - ansible.builtin.dnf:
      name: 
        - docker-ce
        - kubeadm
        - python3-pip
        - python3-setuptools
        - httpd
        - bind-utils
        - iproute-tc
        - iproute
      state: latest

  - ansible.builtin.pip:
        name:
          - docker

  - ansible.builtin.service:
      name: docker
      state: started
      enabled: yes

  - ansible.builtin.service:
      name: kubelet
      state: started
      enabled: yes

  - ansible.builtin.shell: |
      swapoff -a
      echo "$(hostname -I | cut -d ' ' -f 1) master-node" >> /etc/hosts
      echo "$(dig +short apibackend.adainterno) node-1 worker-node-1" >> /etc/hosts
      rm /etc/containerd/config.toml
      systemctl restart containerd
      kubeadm init
      mkdir -p $HOME/.kube
      cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
      chown $(id -u):$(id -g) $HOME/.kube/config
      export kubever=$(kubectl version | base64 | tr -d '\n')
      kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
      kubeadm token create --print-join-command > /var/tmp/kubeadm-init
  
  - community.docker.docker_image:
      state: absent
      name: "{{ frontendNone }}"
      tag: "{{ frontendVersao }}"

  - community.docker.docker_image:
      name: "{{ frontendNone }}:{{ frontendVersao }}"
      build:
        path: 'dockerfront/'
      source: build
      state: present

  - community.docker.docker_image:
      state: absent
      name: "{{ backendNone }}"
      tag: "{{ backendVersao }}"

  - community.docker.docker_image:
      name: "{{ backendNone }}:{{ backendVersao }}"
      build:
        path: 'dockerback/'
      source: build
      state: present

  - ansible.builtin.copy:
      dest: '/etc/httpd/conf.d/proxy.conf'
      content: |
        <VirtualHost *:80>
          ErrorLog /var/log/httpd/app.err
          CustomLog /var/log/httpd/app.log combined

          ProxyPreserveHost On
          ProxyPass / http://172.17.0.1:4200/
          ProxyPassReverse / http://172.17.0.1:4200/
        </VirtualHost>

  - ansible.builtin.service:
      name: httpd
      state: started
      enabled: yes